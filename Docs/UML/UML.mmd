
classDiagram

    class TransportType {
        <<enumeration>>
        Bus
        Airplane
    }
    class Station {
        +String id
        +String name
        +TransportType transportType
    }
    class Departure {
        +String id
        +TransportType transportType
        +String destination
        +LocalDateTime scheduledTime
        +DepartureStatus status
    }
    class Arrival {
        +String id
        +String origin
        +LocalDateTime scheduledTime
        +DepartureStatus status
    }
    class Route {
        +String id
        +Station origin
        +Station destination
        +LocalDateTime scheduledDeparture
        +LocalDateTime scheduledArrival
        +DepartureStatus status
    }
    class DepartureStatus {
        <<enumeration>>
        OnTime
        Delayed
        Cancelled
    }

    class StationDTO {
        +String id
        +String name
        +String transportType
    }
    class DepartureDTO {
        +String id
        +String transportType
        +String destination
        +String scheduledTime
        +String status
    }
    class ArrivalDTO {
        +String id
        +String origin
        +String scheduledTime
        +String status
    }
    class RouteDTO {
        +String id
        +String originId
        +String destinationId
        +String scheduledDeparture
        +String scheduledArrival
        +String status
    }

    class Event {
        <<interface>>
    }

    class BusEvent {
        <<interface>>
    }
    class BusStationsLoaded {
        +List~Station~ stations
    }
    class BusDeparturesLoaded {
        +List~Departure~ departures
    }

    class AirplaneEvent {
        <<interface>>
    }
    class AirportsLoaded {
        +List~Station~ airports
    }
    class AirplaneDeparturesLoaded {
        +List~Departure~ departures
    }
    class AirplaneArrivalsLoaded {
        +List~Arrival~ arrivals
    }

    class Command {
        <<interface>>
    }

    class BusCommand {
        <<interface>>
    }
    class LoadBusStations {
    }
    class LoadBusDepartures {
        +String stationId
    }

    class AirplaneCommand {
        <<interface>>
    }
    class LoadAirports {
    }
    class LoadAirportDepartures {
        +String airportId
    }
    class LoadAirportArrivals {
        +String airportId
    }
    class CheckRoute {
        +Station origin
        +Station destination
    }

    class CommandHandler {
        <<interface>>
        +handle(Command) IO~Event~
    }

    class BusCommandHandler {
        +handle(BusCommand) IO~BusEvent~
    }

    class AirplaneCommandHandler {
        +handle(AirplaneCommand) IO~AirplaneEvent~
    }

    class TransportAPI {
        <<interface>>
        +loadStations() IO~List~StationDTO~~
        +loadDepartures(String stationId) IO~List~DepartureDTO~~
    }

    class BusAPI {
        -String apiKey
        +loadStations() IO~List~StationDTO~~
        +loadDepartures(String stationId) IO~List~DepartureDTO~~
    }

    class AirplaneAPI {
        -String apiKey
        +loadStations() IO~List~StationDTO~~
        +loadDepartures(String airportId) IO~List~DepartureDTO~~
        +loadArrivals(String airportId) IO~List~ArrivalDTO~~
        +checkRoute(String originId, String destinationId) IO~RouteDTO~
    }

    class TransportFacade {
        -BusAPI busAPI
        -AirplaneAPI airplaneAPI
        +loadBusStations() IO~List~Station~~
        +loadAirports() IO~List~Station~~
        +loadBusDepartures(String stationId) IO~List~Departure~~
        +loadAirportDepartures(String airportId) IO~List~Departure~~
        +loadAirportArrivals(String airportId) IO~List~Arrival~~
        +checkRoute(String originId, String destinationId) IO~Route~
    }

    class TransportApp {
        +init() Tuple~Model,Cmd~IO,Msg~~
        +update(Msg msg, Model model) Tuple~Model,Cmd~IO,Msg~~
        +view(Model model) Html~Msg~
    }

    Event <|-- BusEvent
    Event <|-- AirplaneEvent
    BusEvent <|-- BusStationsLoaded
    BusEvent <|-- BusDeparturesLoaded
    AirplaneEvent <|-- AirportsLoaded
    AirplaneEvent <|-- AirplaneDeparturesLoaded
    AirplaneEvent <|-- AirplaneArrivalsLoaded

    Command <|-- BusCommand
    Command <|-- AirplaneCommand
    BusCommand <|-- LoadBusStations
    BusCommand <|-- LoadBusDepartures
    AirplaneCommand <|-- LoadAirports
    AirplaneCommand <|-- LoadAirportDepartures
    AirplaneCommand <|-- LoadAirportArrivals
    AirplaneCommand <|-- CheckRoute

    CommandHandler <|.. BusCommandHandler
    CommandHandler <|.. AirplaneCommandHandler

    TransportAPI <|.. BusAPI
    TransportAPI <|.. AirplaneAPI

    TransportFacade --> BusAPI
    TransportFacade --> AirplaneAPI

    BusCommandHandler --> BusAPI
    AirplaneCommandHandler --> AirplaneAPI

    TransportApp --> TransportFacade
    TransportApp --> CommandHandler

    Station .. StationDTO
    Departure .. DepartureDTO
    Arrival .. ArrivalDTO
    Route .. RouteDTO

